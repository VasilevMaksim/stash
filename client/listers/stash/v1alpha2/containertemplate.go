/*
Copyright 2019 The Stash Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha2

import (
	v1alpha2 "github.com/appscode/stash/apis/stash/v1alpha2"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// ContainerTemplateLister helps list ContainerTemplates.
type ContainerTemplateLister interface {
	// List lists all ContainerTemplates in the indexer.
	List(selector labels.Selector) (ret []*v1alpha2.ContainerTemplate, err error)
	// ContainerTemplates returns an object that can list and get ContainerTemplates.
	ContainerTemplates(namespace string) ContainerTemplateNamespaceLister
	ContainerTemplateListerExpansion
}

// containerTemplateLister implements the ContainerTemplateLister interface.
type containerTemplateLister struct {
	indexer cache.Indexer
}

// NewContainerTemplateLister returns a new ContainerTemplateLister.
func NewContainerTemplateLister(indexer cache.Indexer) ContainerTemplateLister {
	return &containerTemplateLister{indexer: indexer}
}

// List lists all ContainerTemplates in the indexer.
func (s *containerTemplateLister) List(selector labels.Selector) (ret []*v1alpha2.ContainerTemplate, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha2.ContainerTemplate))
	})
	return ret, err
}

// ContainerTemplates returns an object that can list and get ContainerTemplates.
func (s *containerTemplateLister) ContainerTemplates(namespace string) ContainerTemplateNamespaceLister {
	return containerTemplateNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// ContainerTemplateNamespaceLister helps list and get ContainerTemplates.
type ContainerTemplateNamespaceLister interface {
	// List lists all ContainerTemplates in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha2.ContainerTemplate, err error)
	// Get retrieves the ContainerTemplate from the indexer for a given namespace and name.
	Get(name string) (*v1alpha2.ContainerTemplate, error)
	ContainerTemplateNamespaceListerExpansion
}

// containerTemplateNamespaceLister implements the ContainerTemplateNamespaceLister
// interface.
type containerTemplateNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all ContainerTemplates in the indexer for a given namespace.
func (s containerTemplateNamespaceLister) List(selector labels.Selector) (ret []*v1alpha2.ContainerTemplate, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha2.ContainerTemplate))
	})
	return ret, err
}

// Get retrieves the ContainerTemplate from the indexer for a given namespace and name.
func (s containerTemplateNamespaceLister) Get(name string) (*v1alpha2.ContainerTemplate, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha2.Resource("containertemplate"), name)
	}
	return obj.(*v1alpha2.ContainerTemplate), nil
}

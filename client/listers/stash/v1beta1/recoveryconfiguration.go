/*
Copyright 2019 The Stash Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1beta1

import (
	v1beta1 "github.com/appscode/stash/apis/stash/v1beta1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// RecoveryConfigurationLister helps list RecoveryConfigurations.
type RecoveryConfigurationLister interface {
	// List lists all RecoveryConfigurations in the indexer.
	List(selector labels.Selector) (ret []*v1beta1.RecoveryConfiguration, err error)
	// RecoveryConfigurations returns an object that can list and get RecoveryConfigurations.
	RecoveryConfigurations(namespace string) RecoveryConfigurationNamespaceLister
	RecoveryConfigurationListerExpansion
}

// recoveryConfigurationLister implements the RecoveryConfigurationLister interface.
type recoveryConfigurationLister struct {
	indexer cache.Indexer
}

// NewRecoveryConfigurationLister returns a new RecoveryConfigurationLister.
func NewRecoveryConfigurationLister(indexer cache.Indexer) RecoveryConfigurationLister {
	return &recoveryConfigurationLister{indexer: indexer}
}

// List lists all RecoveryConfigurations in the indexer.
func (s *recoveryConfigurationLister) List(selector labels.Selector) (ret []*v1beta1.RecoveryConfiguration, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1beta1.RecoveryConfiguration))
	})
	return ret, err
}

// RecoveryConfigurations returns an object that can list and get RecoveryConfigurations.
func (s *recoveryConfigurationLister) RecoveryConfigurations(namespace string) RecoveryConfigurationNamespaceLister {
	return recoveryConfigurationNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// RecoveryConfigurationNamespaceLister helps list and get RecoveryConfigurations.
type RecoveryConfigurationNamespaceLister interface {
	// List lists all RecoveryConfigurations in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1beta1.RecoveryConfiguration, err error)
	// Get retrieves the RecoveryConfiguration from the indexer for a given namespace and name.
	Get(name string) (*v1beta1.RecoveryConfiguration, error)
	RecoveryConfigurationNamespaceListerExpansion
}

// recoveryConfigurationNamespaceLister implements the RecoveryConfigurationNamespaceLister
// interface.
type recoveryConfigurationNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all RecoveryConfigurations in the indexer for a given namespace.
func (s recoveryConfigurationNamespaceLister) List(selector labels.Selector) (ret []*v1beta1.RecoveryConfiguration, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1beta1.RecoveryConfiguration))
	})
	return ret, err
}

// Get retrieves the RecoveryConfiguration from the indexer for a given namespace and name.
func (s recoveryConfigurationNamespaceLister) Get(name string) (*v1beta1.RecoveryConfiguration, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1beta1.Resource("recoveryconfiguration"), name)
	}
	return obj.(*v1beta1.RecoveryConfiguration), nil
}
